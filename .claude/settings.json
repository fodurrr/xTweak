{
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "tidewave",
    "ash_ai",
    "playwright",
    "context7"
  ],
  "permissions": {
    "allow": [
      "Bash(md-tree:*)",
      "Bash(mkdir:*)",
      "Bash(cat:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(mix igniter.install:*)",
      "Bash(mix deps.get:*)",
      "Bash(mix deps:*)",
      "Bash(mix deps.update:*)",
      "Bash(mix compile:*)",
      "Bash(mix format)",
      "Bash(mix dialyzer:*)",
      "Bash(mix help:*)",
      "Bash(mix hex.outdated:*)",
      "Bash(mix hex.info:*)",
      "Bash(mix test)",
      "Bash(mix test:*)",
      "Bash(timeout 30 mix test:*)",
      "Bash(timeout 60 mix test:*)",
      "Bash(timeout 90 mix test:*)",
      "Bash(timeout 10 mix phx.server)",
      "Bash(timeout 5 mix phx.server)",
      "Bash(timeout 30 mix test apps/xpando_core/test/xpando/core/node_test.exs)",
      "Bash(timeout 30 mix test apps/xpando_core/test/xpando/core/knowledge_test.exs)",
      "Bash(timeout 30 mix test apps/xpando_core/test/xpando/core/contribution_test.exs)",
      "Bash(timeout 30 mix test apps/xpando_core/test/xpando/core/user_test.exs)",
      "Bash(timeout 30 mix test apps/xpando_core/test/xpando/core/user_test.exs:*)",
      "Bash(timeout 60 mix test apps/xpando_core/test/xpando/core/token_test.exs)",
      "Bash(timeout 30 mix test apps/xpando_core/test/xpando/core_test.exs)",
      "Bash(timeout 30 mix test apps/xpando_core/test/xpando/core/validators_test.exs)",
      "Bash(timeout 60 mix test apps/xpando_core/test:*)",
      "Bash(timeout 30 mix test apps/xpando_core/test/doctests_test.exs)",
      "Bash(timeout 60 mix test apps/xpando_web/test/xpando_web_web/live/dashboard_live_test.exs)",
      "Bash(timeout 30 mix test test/xpando_node/xpando_node/cluster_test.exs:*)",
      "Bash(timeout 30 mix test test/xpando_node/xpando_node/distributed_test.exs:*)",
      "Bash(timeout 60 mix test test/xpando_node/xpando_node/distributed_test.exs:*)",
      "Bash(timeout 30 mix test apps/xtweak_web/test/xtweak_web_web/controllers/page_controller_test.exs:*)",
      "Bash(MIX_ENV=test mix test apps/xtweak_core/test/xtweak/core/user_test.exs)",
      "Bash(timeout 30 mix test test/*)",
      "Bash(timeout 60 mix test --seed 0)",
      "Bash(timeout 90 mix test --seed 0)",
      "Bash(timeout 30 mix test --seed 0:*)",
      "Bash(timeout 90 mix test --seed 0 --failed)",
      "Bash(timeout 30 mix test --only doctest:*)",
      "Bash(MIX_ENV=test mix ash_postgres.create:*)",
      "Bash(MIX_ENV=test mix ash_postgres.migrate:*)",
      "Bash(MIX_ENV=test mix ash_postgres.generate_migrations:*)",
      "Bash(MIX_ENV=test mix ecto.migrate:*)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "WebFetch(domain:hex.pm)",
      "WebFetch(domain:hexdocs.pm)",
      "WebFetch(domain:github.com)",
      "WebSearch",
      "mcp__tidewave__get_docs",
      "mcp__tidewave__search_package_docs",
      "mcp__tidewave__project_eval",
      "mcp__tidewave__get_logs",
      "mcp__tidewave__get_ecto_schemas",
      "mcp__ash_ai__list_generators",
      "mcp__ash_ai__list_ash_resources",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_navigate_back",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_close",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs"
    ],
    "deny": [
      "Read(.ignore/*)",
      "Read(.ignore)",
      "Glob(.ignore/*)",
      "Grep(.ignore/*)",
      "LS(.ignore)",
      "Edit(.ignore/*)",
      "Write(.ignore/*)",
      "MultiEdit(.ignore/*)",
      "Read(.dev_docs/*)",
      "Read(.dev_docs)",
      "Glob(.dev_docs/*)",
      "Grep(.dev_docs/*)",
      "LS(.dev_docs)",
      "Edit(.dev_docs/*)",
      "Write(.dev_docs/*)",
      "MultiEdit(.dev_docs/*)"
    ]
  }
}
